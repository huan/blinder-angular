(function(C) {
  var m = [
    0,
    11,
    15,
    19,
    23,
    27,
    31,
    16,
    18,
    20,
    22,
    24,
    26,
    28,
    20,
    22,
    24,
    24,
    26,
    28,
    28,
    22,
    24,
    24,
    26,
    26,
    28,
    28,
    24,
    24,
    26,
    26,
    26,
    28,
    28,
    24,
    26,
    26,
    26,
    28,
    28
  ];
  var y = 'image/png';
  var G = 'image/octet-stream';
  var T = [
    1,
    0,
    19,
    7,
    1,
    0,
    16,
    10,
    1,
    0,
    13,
    13,
    1,
    0,
    9,
    17,
    1,
    0,
    34,
    10,
    1,
    0,
    28,
    16,
    1,
    0,
    22,
    22,
    1,
    0,
    16,
    28,
    1,
    0,
    55,
    15,
    1,
    0,
    44,
    26,
    2,
    0,
    17,
    18,
    2,
    0,
    13,
    22,
    1,
    0,
    80,
    20,
    2,
    0,
    32,
    18,
    2,
    0,
    24,
    26,
    4,
    0,
    9,
    16,
    1,
    0,
    108,
    26,
    2,
    0,
    43,
    24,
    2,
    2,
    15,
    18,
    2,
    2,
    11,
    22,
    2,
    0,
    68,
    18,
    4,
    0,
    27,
    16,
    4,
    0,
    19,
    24,
    4,
    0,
    15,
    28,
    2,
    0,
    78,
    20,
    4,
    0,
    31,
    18,
    2,
    4,
    14,
    18,
    4,
    1,
    13,
    26,
    2,
    0,
    97,
    24,
    2,
    2,
    38,
    22,
    4,
    2,
    18,
    22,
    4,
    2,
    14,
    26,
    2,
    0,
    116,
    30,
    3,
    2,
    36,
    22,
    4,
    4,
    16,
    20,
    4,
    4,
    12,
    24,
    2,
    2,
    68,
    18,
    4,
    1,
    43,
    26,
    6,
    2,
    19,
    24,
    6,
    2,
    15,
    28,
    4,
    0,
    81,
    20,
    1,
    4,
    50,
    30,
    4,
    4,
    22,
    28,
    3,
    8,
    12,
    24,
    2,
    2,
    92,
    24,
    6,
    2,
    36,
    22,
    4,
    6,
    20,
    26,
    7,
    4,
    14,
    28,
    4,
    0,
    107,
    26,
    8,
    1,
    37,
    22,
    8,
    4,
    20,
    24,
    12,
    4,
    11,
    22,
    3,
    1,
    115,
    30,
    4,
    5,
    40,
    24,
    11,
    5,
    16,
    20,
    11,
    5,
    12,
    24,
    5,
    1,
    87,
    22,
    5,
    5,
    41,
    24,
    5,
    7,
    24,
    30,
    11,
    7,
    12,
    24,
    5,
    1,
    98,
    24,
    7,
    3,
    45,
    28,
    15,
    2,
    19,
    24,
    3,
    13,
    15,
    30,
    1,
    5,
    107,
    28,
    10,
    1,
    46,
    28,
    1,
    15,
    22,
    28,
    2,
    17,
    14,
    28,
    5,
    1,
    120,
    30,
    9,
    4,
    43,
    26,
    17,
    1,
    22,
    28,
    2,
    19,
    14,
    28,
    3,
    4,
    113,
    28,
    3,
    11,
    44,
    26,
    17,
    4,
    21,
    26,
    9,
    16,
    13,
    26,
    3,
    5,
    107,
    28,
    3,
    13,
    41,
    26,
    15,
    5,
    24,
    30,
    15,
    10,
    15,
    28,
    4,
    4,
    116,
    28,
    17,
    0,
    42,
    26,
    17,
    6,
    22,
    28,
    19,
    6,
    16,
    30,
    2,
    7,
    111,
    28,
    17,
    0,
    46,
    28,
    7,
    16,
    24,
    30,
    34,
    0,
    13,
    24,
    4,
    5,
    121,
    30,
    4,
    14,
    47,
    28,
    11,
    14,
    24,
    30,
    16,
    14,
    15,
    30,
    6,
    4,
    117,
    30,
    6,
    14,
    45,
    28,
    11,
    16,
    24,
    30,
    30,
    2,
    16,
    30,
    8,
    4,
    106,
    26,
    8,
    13,
    47,
    28,
    7,
    22,
    24,
    30,
    22,
    13,
    15,
    30,
    10,
    2,
    114,
    28,
    19,
    4,
    46,
    28,
    28,
    6,
    22,
    28,
    33,
    4,
    16,
    30,
    8,
    4,
    122,
    30,
    22,
    3,
    45,
    28,
    8,
    26,
    23,
    30,
    12,
    28,
    15,
    30,
    3,
    10,
    117,
    30,
    3,
    23,
    45,
    28,
    4,
    31,
    24,
    30,
    11,
    31,
    15,
    30,
    7,
    7,
    116,
    30,
    21,
    7,
    45,
    28,
    1,
    37,
    23,
    30,
    19,
    26,
    15,
    30,
    5,
    10,
    115,
    30,
    19,
    10,
    47,
    28,
    15,
    25,
    24,
    30,
    23,
    25,
    15,
    30,
    13,
    3,
    115,
    30,
    2,
    29,
    46,
    28,
    42,
    1,
    24,
    30,
    23,
    28,
    15,
    30,
    17,
    0,
    115,
    30,
    10,
    23,
    46,
    28,
    10,
    35,
    24,
    30,
    19,
    35,
    15,
    30,
    17,
    1,
    115,
    30,
    14,
    21,
    46,
    28,
    29,
    19,
    24,
    30,
    11,
    46,
    15,
    30,
    13,
    6,
    115,
    30,
    14,
    23,
    46,
    28,
    44,
    7,
    24,
    30,
    59,
    1,
    16,
    30,
    12,
    7,
    121,
    30,
    12,
    26,
    47,
    28,
    39,
    14,
    24,
    30,
    22,
    41,
    15,
    30,
    6,
    14,
    121,
    30,
    6,
    34,
    47,
    28,
    46,
    10,
    24,
    30,
    2,
    64,
    15,
    30,
    17,
    4,
    122,
    30,
    29,
    14,
    46,
    28,
    49,
    10,
    24,
    30,
    24,
    46,
    15,
    30,
    4,
    18,
    122,
    30,
    13,
    32,
    46,
    28,
    48,
    14,
    24,
    30,
    42,
    32,
    15,
    30,
    20,
    4,
    117,
    30,
    40,
    7,
    47,
    28,
    43,
    22,
    24,
    30,
    10,
    67,
    15,
    30,
    19,
    6,
    118,
    30,
    18,
    31,
    47,
    28,
    34,
    34,
    24,
    30,
    20,
    61,
    15,
    30
  ];
  var r = {
    L: 1,
    M: 2,
    Q: 3,
    H: 4
  };
  var N = [
    30660,
    29427,
    32170,
    30877,
    26159,
    25368,
    27713,
    26998,
    21522,
    20773,
    24188,
    23371,
    17913,
    16590,
    20375,
    19104,
    13663,
    12392,
    16177,
    14854,
    9396,
    8579,
    11994,
    11245,
    5769,
    5054,
    7399,
    6608,
    1890,
    597,
    3340,
    2107
  ];
  var o = [
    1,
    2,
    4,
    8,
    16,
    32,
    64,
    128,
    29,
    58,
    116,
    232,
    205,
    135,
    19,
    38,
    76,
    152,
    45,
    90,
    180,
    117,
    234,
    201,
    143,
    3,
    6,
    12,
    24,
    48,
    96,
    192,
    157,
    39,
    78,
    156,
    37,
    74,
    148,
    53,
    106,
    212,
    181,
    119,
    238,
    193,
    159,
    35,
    70,
    140,
    5,
    10,
    20,
    40,
    80,
    160,
    93,
    186,
    105,
    210,
    185,
    111,
    222,
    161,
    95,
    190,
    97,
    194,
    153,
    47,
    94,
    188,
    101,
    202,
    137,
    15,
    30,
    60,
    120,
    240,
    253,
    231,
    211,
    187,
    107,
    214,
    177,
    127,
    254,
    225,
    223,
    163,
    91,
    182,
    113,
    226,
    217,
    175,
    67,
    134,
    17,
    34,
    68,
    136,
    13,
    26,
    52,
    104,
    208,
    189,
    103,
    206,
    129,
    31,
    62,
    124,
    248,
    237,
    199,
    147,
    59,
    118,
    236,
    197,
    151,
    51,
    102,
    204,
    133,
    23,
    46,
    92,
    184,
    109,
    218,
    169,
    79,
    158,
    33,
    66,
    132,
    21,
    42,
    84,
    168,
    77,
    154,
    41,
    82,
    164,
    85,
    170,
    73,
    146,
    57,
    114,
    228,
    213,
    183,
    115,
    230,
    209,
    191,
    99,
    198,
    145,
    63,
    126,
    252,
    229,
    215,
    179,
    123,
    246,
    241,
    255,
    227,
    219,
    171,
    75,
    150,
    49,
    98,
    196,
    149,
    55,
    110,
    220,
    165,
    87,
    174,
    65,
    130,
    25,
    50,
    100,
    200,
    141,
    7,
    14,
    28,
    56,
    112,
    224,
    221,
    167,
    83,
    166,
    81,
    162,
    89,
    178,
    121,
    242,
    249,
    239,
    195,
    155,
    43,
    86,
    172,
    69,
    138,
    9,
    18,
    36,
    72,
    144,
    61,
    122,
    244,
    245,
    247,
    243,
    251,
    235,
    203,
    139,
    11,
    22,
    44,
    88,
    176,
    125,
    250,
    233,
    207,
    131,
    27,
    54,
    108,
    216,
    173,
    71,
    142,
    0
  ];
  var n = [
    255,
    0,
    1,
    25,
    2,
    50,
    26,
    198,
    3,
    223,
    51,
    238,
    27,
    104,
    199,
    75,
    4,
    100,
    224,
    14,
    52,
    141,
    239,
    129,
    28,
    193,
    105,
    248,
    200,
    8,
    76,
    113,
    5,
    138,
    101,
    47,
    225,
    36,
    15,
    33,
    53,
    147,
    142,
    218,
    240,
    18,
    130,
    69,
    29,
    181,
    194,
    125,
    106,
    39,
    249,
    185,
    201,
    154,
    9,
    120,
    77,
    228,
    114,
    166,
    6,
    191,
    139,
    98,
    102,
    221,
    48,
    253,
    226,
    152,
    37,
    179,
    16,
    145,
    34,
    136,
    54,
    208,
    148,
    206,
    143,
    150,
    219,
    189,
    241,
    210,
    19,
    92,
    131,
    56,
    70,
    64,
    30,
    66,
    182,
    163,
    195,
    72,
    126,
    110,
    107,
    58,
    40,
    84,
    250,
    133,
    186,
    61,
    202,
    94,
    155,
    159,
    10,
    21,
    121,
    43,
    78,
    212,
    229,
    172,
    115,
    243,
    167,
    87,
    7,
    112,
    192,
    247,
    140,
    128,
    99,
    13,
    103,
    74,
    222,
    237,
    49,
    197,
    254,
    24,
    227,
    165,
    153,
    119,
    38,
    184,
    180,
    124,
    17,
    68,
    146,
    217,
    35,
    32,
    137,
    46,
    55,
    63,
    209,
    91,
    149,
    188,
    207,
    205,
    144,
    135,
    151,
    178,
    220,
    252,
    190,
    97,
    242,
    86,
    211,
    171,
    20,
    42,
    93,
    158,
    132,
    60,
    57,
    83,
    71,
    109,
    65,
    162,
    31,
    45,
    67,
    216,
    183,
    123,
    164,
    118,
    196,
    23,
    73,
    236,
    127,
    12,
    111,
    246,
    108,
    161,
    59,
    82,
    41,
    157,
    85,
    170,
    251,
    96,
    134,
    177,
    187,
    204,
    62,
    90,
    203,
    89,
    95,
    176,
    156,
    169,
    160,
    81,
    11,
    245,
    22,
    235,
    122,
    117,
    44,
    215,
    79,
    174,
    213,
    233,
    230,
    231,
    173,
    232,
    116,
    214,
    244,
    234,
    168,
    80,
    88,
    175
  ];
  var d = 3;
  var c = 3;
  var b = 40;
  var X = 10;
  var s = [
    3220,
    1468,
    2713,
    1235,
    3062,
    1890,
    2119,
    1549,
    2344,
    2936,
    1117,
    2583,
    1330,
    2470,
    1667,
    2249,
    2028,
    3780,
    481,
    4011,
    142,
    3098,
    831,
    3445,
    592,
    2517,
    1776,
    2234,
    1951,
    2827,
    1070,
    2660,
    1345,
    3177
  ];
  var g = parseInt('0666', 8);
  var F = [];
  var I;
  var E;
  var p,
    f,
    e;
  var W = [];
  var k = 1;
  var q = [];
  var V = [];
  var D;
  var P;
  var H = false;
  var A = [];
  var Q = C.qr;
  var M = [];
  var R;
  var a;
  function w() {
    return H
      ? new I()
      : C.document.createElement('canvas');
  }
  function L() {
    return H
      ? new P()
      : C.document.createElement('img');
  }
  function l(ab, Z, aa) {
    var Y = Z.mime || y;
    C.location.href = ab.toDataURL(Y).replace(Y, G);
    if (typeof aa === 'function') {
      aa();
    }
  }
  function B(Y) {
    if (typeof Y === 'string') {
      Y = {
        value: Y
      }
    }
    return Y || {};
  }
  function j(Y) {
    var Z = ['canvas', 'image', 'save', 'saveSync', 'toDataURL'];
    var aa;
    function ab(ac) {
      Y[ac] = function() {
        throw new Error(ac + ' requires HTML5 canvas element support')
      };
    }
    for (aa = 0; aa < Z.length; aa++) {
      ab(Z[aa]);
    }
  }
  function v(ad, Z, ac) {
    if (typeof Z.path !== 'string') {
      return ac(new TypeError('Invalid path type: ' + typeof Z.path))
    }
    var Y,
      ab;
    function aa() {
      D.write(Y, ab, 0, ab.length, 0, function(ae) {
        D.close(Y);
        ac(ae)
      });
    }
    ad.toBuffer(function(ae, af) {
      if (ae) {
        return ac(ae)
      }
      ab = af;
      if (Y) {
        aa()
      }
    });
    D.open(Z.path, 'w', g, function(ae, af) {
      if (ae) {
        return ac(ae);
      }
      Y = af;
      if (ab) {
        aa();
      }
    })
  }
  function K(ab, Z) {
    if (typeof Z.path !== 'string') {
      throw new TypeError('Invalid path type: ' + typeof Z.path);
    }
    var aa = ab.toBuffer();
    var Y = D.openSync(Z.path, 'w', g);
    try {
      D.writeSync(Y, aa, 0, aa.length, 0);
    } finally {
      D.closeSync(Y);
    }
  }
  function u(Y, aa) {
    var Z;
    if (Y > aa) {
      Z = Y;
      Y = aa;
      aa = Z;
    }
    Z = aa;
    Z *= aa;
    Z += aa;
    Z >>= 1;
    Z += Y;
    V[Z] = 1
  }
  function h(Y, aa) {
    var Z;
    q[Y + a * aa] = 1;
    for (Z = -2; Z < 2; Z++) {
      q[(Y + Z) + a * (aa - 2)] = 1;
      q[(Y - 2) + a * (aa + Z + 1)] = 1;
      q[(Y + 2) + a * (aa + Z)] = 1;
      q[(Y + Z + 1) + a * (aa + 2)] = 1
    }
    for (Z = 0; Z < 2; Z++) {
      u(Y - 1, aa + Z);
      u(Y + 1, aa - Z);
      u(Y - Z, aa - 1);
      u(Y + Z, aa + 1);
    }
  }
  function x(Y) {
    while (Y >= 255) {
      Y -= 255;
      Y = (Y >> 8) + (Y & 255)
    }
    return Y;
  }
  function i(ac, ad, Z, Y) {
    var ae,
      ab,
      aa;
    for (ab = 0; ab < Y; ab++) {
      M[Z + ab] = 0
    }
    for (ab = 0; ab < ad; ab++) {
      ae = n[M[ac + ab] ^ M[Z]];
      if (ae !== 255) {
        for (aa = 1; aa < Y; aa++) {
          M[Z + aa - 1] = M[Z + aa] ^ o[x(ae + A[Y - aa])];
        }
      } else {
        for (aa = Z; aa < Z + Y; aa++) {
          M[aa] = M[aa + 1]
        }
      }
      M[Z + Y - 1] = ae === 255
        ? 0
        : o[x(ae + A[0])]
    }
  }
  function z(Y, aa) {
    var Z;
    if (Y > aa) {
      Z = Y;
      Y = aa;
      aa = Z;
    }
    Z = aa;
    Z += aa * aa;
    Z >>= 1;
    Z += Y;
    return V[Z] === 1;
  }
  function J(Z) {
    var Y,
      ac,
      ab,
      aa;
    switch (Z) {
      case 0:
        for (ac = 0; ac < a; ac++) {
          for (Y = 0; Y < a; Y++) {
            if (!((Y + ac) & 1) && !z(Y, ac)) {
              q[Y + ac * a] ^= 1
            }
          }
        }
        break;
      case 1:
        for (ac = 0; ac < a; ac++) {
          for (Y = 0; Y < a; Y++) {
            if (!(ac & 1) && !z(Y, ac)) {
              q[Y + ac * a] ^= 1;
            }
          }
        }
        break;
      case 2:
        for (ac = 0; ac < a; ac++) {
          for (ab = 0, Y = 0; Y < a; Y++, ab++) {
            if (ab === 3) {
              ab = 0
            }
            if (!ab && !z(Y, ac)) {
              q[Y + ac * a] ^= 1
            }
          }
        }
        break;
      case 3:
        for (aa = 0, ac = 0; ac < a; ac++, aa++) {
          if (aa === 3) {
            aa = 0;
          }
          for (ab = aa, Y = 0; Y < a; Y++, ab++) {
            if (ab === 3) {
              ab = 0
            }
            if (!ab && !z(Y, ac)) {
              q[Y + ac * a] ^= 1
            }
          }
        }
        break;
      case 4:
        for (ac = 0; ac < a; ac++) {
          for (ab = 0, aa = ((ac >> 1) & 1), Y = 0; Y < a; Y++, ab++) {
            if (ab === 3) {
              ab = 0;
              aa = !aa;
            }
            if (!aa && !z(Y, ac)) {
              q[Y + ac * a] ^= 1;
            }
          }
        }
        break;
      case 5:
        for (aa = 0, ac = 0; ac < a; ac++, aa++) {
          if (aa === 3) {
            aa = 0;
          }
          for (ab = 0, Y = 0; Y < a; Y++, ab++) {
            if (ab === 3) {
              ab = 0
            }
            if (!((Y & ac & 1) + !(!ab | !aa)) && !z(Y, ac)) {
              q[Y + ac * a] ^= 1
            }
          }
        }
        break;
      case 6:
        for (aa = 0, ac = 0; ac < a; ac++, aa++) {
          if (aa === 3) {
            aa = 0
          }
          for (ab = 0, Y = 0; Y < a; Y++, ab++) {
            if (ab === 3) {
              ab = 0;
            }
            if (!(((Y & ac & 1) + (ab && (ab === aa))) & 1) && !z(Y, ac)) {
              q[Y + ac * a] ^= 1;
            }
          }
        }
        break;
      case 7:
        for (aa = 0, ac = 0; ac < a; ac++, aa++) {
          if (aa === 3) {
            aa = 0
          }
          for (ab = 0, Y = 0; Y < a; Y++, ab++) {
            if (ab === 3) {
              ab = 0;
            }
            if (!(((ab && (ab === aa)) + ((Y + ac) & 1)) & 1) && !z(Y, ac)) {
              q[Y + ac * a] ^= 1
            }
          }
        }
        break
    }
  }
  function t(aa) {
    var Z = 0;
    var Y;
    for (Y = 0; Y <= aa; Y++) {
      if (F[Y] >= 5) {
        Z += d + F[Y] - 5;
      }
    }
    for (Y = 3; Y < aa - 1; Y += 2) {
      if (F[Y - 2] === F[Y + 2] && F[Y + 2] === F[Y - 1] && F[Y - 1] === F[Y + 1] && F[Y - 1] * 3 === F[Y] && (F[Y - 3] === 0 || Y + 3 > aa || F[Y - 3] * 3 >= F[Y] * 4 || F[Y + 3] * 3 >= F[Y] * 4)) {
        Z += b
      }
    }
    return Z
  }
  function O() {
    var ae,
      af,
      Y,
      Z,
      ad,
      ab,
      aa,
      ag,
      ac;
    Y = ad = ab = 0;
    for (ac = 0; ac < a - 1; ac++) {
      for (ag = 0; ag < a - 1; ag++) {
        if ((q[ag + a * ac] && q[(ag + 1) + a * ac] && q[ag + a * (ac + 1)] && q[(ag + 1) + a * (ac + 1)]) || !(q[ag + a * ac] || q[(ag + 1) + a * ac] || q[ag + a * (ac + 1)] || q[(ag + 1) + a * (ac + 1)])) {
          Y += c;
        }
      }
    }
    for (ac = 0; ac < a; ac++) {
      F[0] = 0;
      for (aa = ae = ag = 0; ag < a; ag++) {
        if ((af = q[ag + a * ac]) === ae) {
          F[aa]++
        } else {
          F[++aa] = 1;
        }
        ae = af;
        ad += ae
          ? 1
          : -1
      }
      Y += t(aa)
    }
    if (ad < 0) {
      ad = -ad
    }
    Z = ad;
    Z += Z << 2;
    Z <<= 1;
    while (Z > a * a) {
      Z -= a * a;
      ab++
    }
    Y += ab * X;
    for (ag = 0; ag < a; ag++) {
      F[0] = 0;
      for (aa = ae = ac = 0; ac < a; ac++) {
        if ((af = q[ag + a * ac]) === ae) {
          F[aa]++;
        } else {
          F[++aa] = 1;
        }
        ae = af
      }
      Y += t(aa)
    }
    return Y;
  }
  function U(ac) {
    var ab,
      aa,
      Z,
      Y,
      ag,
      af,
      ae,
      ad;
    ag = ac.length;
    R = 0;
    do {
      R++;
      Z = (k - 1) * 4 + (R - 1) * 16;
      f = T[Z++];
      e = T[Z++];
      E = T[Z++];
      p = T[Z];
      Z = E * (f + e) + e - 3 + (R <= 9);
      if (ag <= Z) {
        break
      }
    } while (R < 40);
    a = 17 + 4 * R;
    af = E + (E + p) * (f + e) + e;
    for (ag = 0; ag < af; ag++) {
      W[ag] = 0
    }
    M = ac.slice(0);
    for (ag = 0; ag < a * a; ag++) {
      q[ag] = 0;
    }
    for (ag = 0; ag < (a * (a + 1) + 1) / 2; ag++) {
      V[ag] = 0;
    }
    for (ag = 0; ag < 3; ag++) {
      Z = ad = 0;
      if (ag === 1) {
        Z = (a - 7)
      }
      if (ag === 2) {
        ad = (a - 7)
      }
      q[(ad + 3) + a * (Z + 3)] = 1;
      for (ae = 0; ae < 6; ae++) {
        q[(ad + ae) + a * Z] = 1;
        q[ad + a * (Z + ae + 1)] = 1;
        q[(ad + 6) + a * (Z + ae)] = 1;
        q[(ad + ae + 1) + a * (Z + 6)] = 1
      }
      for (ae = 1; ae < 5; ae++) {
        u(ad + ae, Z + 1);
        u(ad + 1, Z + ae + 1);
        u(ad + 5, Z + ae);
        u(ad + ae + 1, Z + 5);
      }
      for (ae = 2; ae < 4; ae++) {
        q[(ad + ae) + a * (Z + 2)] = 1;
        q[(ad + 2) + a * (Z + ae + 1)] = 1;
        q[(ad + 4) + a * (Z + ae)] = 1;
        q[(ad + ae + 1) + a * (Z + 4)] = 1
      }
    }
    if (R > 1) {
      ag = m[R];
      ad = a - 7;
      for (;;) {
        ae = a - 7;
        while (ae > ag - 3) {
          h(ae, ad);
          if (ae < ag) {
            break;
          }
          ae -= ag
        }
        if (ad <= ag + 9) {
          break
        }
        ad -= ag;
        h(6, ad);
        h(ad, 6);
      }
    }
    q[8 + a * (a - 8)] = 1;
    for (ad = 0; ad < 7; ad++) {
      u(7, ad);
      u(a - 8, ad);
      u(7, ad + a - 7);
    }
    for (ae = 0; ae < 8; ae++) {
      u(ae, 7);
      u(ae + a - 8, 7);
      u(ae, a - 8)
    }
    for (ae = 0; ae < 9; ae++) {
      u(ae, 8);
    }
    for (ae = 0; ae < 8; ae++) {
      u(ae + a - 8, 8);
      u(8, ae)
    }
    for (ad = 0; ad < 7; ad++) {
      u(8, ad + a - 7)
    }
    for (ae = 0; ae < a - 14; ae++) {
      if (ae & 1) {
        u(8 + ae, 6);
        u(6, 8 + ae);
      } else {
        q[(8 + ae) + a * 6] = 1;
        q[6 + a * (8 + ae)] = 1;
      }
    }
    if (R > 6) {
      ag = s[R - 7];
      Z = 17;
      for (ae = 0; ae < 6; ae++) {
        for (ad = 0; ad < 3; ad++, Z--) {
          if (1 & (Z > 11
            ? R >> (Z - 12)
            : ag >> Z)) {
            q[(5 - ae) + a * (2 - ad + a - 11)] = 1;
            q[(2 - ad + a - 11) + a * (5 - ae)] = 1
          } else {
            u(5 - ae, 2 - ad + a - 11);
            u(2 - ad + a - 11, 5 - ae);
          }
        }
      }
    }
    for (ad = 0; ad < a; ad++) {
      for (ae = 0; ae <= ad; ae++) {
        if (q[ae + a * ad]) {
          u(ae, ad);
        }
      }
    }
    af = M.length;
    for (ab = 0; ab < af; ab++) {
      W[ab] = M.charCodeAt(ab)
    }
    M = W.slice(0);
    ae = E * (f + e) + e;
    if (af >= ae - 2) {
      af = ae - 2;
      if (R > 9) {
        af--
      }
    }
    ab = af;
    if (R > 9) {
      M[ab + 2] = 0;
      M[ab + 3] = 0;
      while (ab--) {
        ag = M[ab];
        M[ab + 3] |= 255 & (ag << 4);
        M[ab + 2] = ag >> 4;
      }
      M[2] |= 255 & (af << 4);
      M[1] = af >> 4;
      M[0] = 64 | (af >> 12)
    } else {
      M[ab + 1] = 0;
      M[ab + 2] = 0;
      while (ab--) {
        ag = M[ab];
        M[ab + 2] |= 255 & (ag << 4);
        M[ab + 1] = ag >> 4
      }
      M[1] |= 255 & (af << 4);
      M[0] = 64 | (af >> 4);
    }
    ab = af + 3 - (R < 10);
    while (ab < ae) {
      M[ab++] = 236;
      M[ab++] = 17
    }
    A[0] = 1;
    for (ab = 0; ab < p; ab++) {
      A[ab + 1] = 1;
      for (aa = ab; aa > 0; aa--) {
        A[aa] = A[aa]
          ? A[aa - 1] ^ o[x(n[A[aa]] + ab)]
          : A[aa - 1];
      }
      A[0] = o[x(n[A[0]] + ab)]
    }
    for (ab = 0; ab <= p; ab++) {
      A[ab] = n[A[ab]]
    }
    Z = ae;
    ad = 0;
    for (ab = 0; ab < f; ab++) {
      i(ad, E, Z, p);
      ad += E;
      Z += p;
    }
    for (ab = 0; ab < e; ab++) {
      i(ad, E + 1, Z, p);
      ad += E + 1;
      Z += p;
    }
    ad = 0;
    for (ab = 0; ab < E; ab++) {
      for (aa = 0; aa < f; aa++) {
        W[ad++] = M[ab + aa * E];
      }
      for (aa = 0; aa < e; aa++) {
        W[ad++] = M[(f * E) + ab + (aa * (E + 1))]
      }
    }
    for (aa = 0; aa < e; aa++) {
      W[ad++] = M[(f * E) + ab + (aa * (E + 1))];
    }
    for (ab = 0; ab < p; ab++) {
      for (aa = 0; aa < f + e; aa++) {
        W[ad++] = M[ae + ab + aa * p]
      }
    }
    M = W;
    ae = ad = a - 1;
    Z = af = 1;
    Y = (E + p) * (f + e) + e;
    for (ab = 0; ab < Y; ab++) {
      ag = M[ab];
      for (aa = 0; aa < 8; aa++, ag <<= 1) {
        if (128 & ag) {
          q[ae + a * ad] = 1
        }
        do {
          if (af) {
            ae--
          } else {
            ae++;
            if (Z) {
              if (ad !== 0) {
                ad--;
              } else {
                ae -= 2;
                Z = !Z;
                if (ae === 6) {
                  ae--;
                  ad = 9;
                }
              }
            } else {
              if (ad !== a - 1) {
                ad++
              } else {
                ae -= 2;
                Z = !Z;
                if (ae === 6) {
                  ae--;
                  ad -= 8;
                }
              }
            }
          }
          af = !af;
        } while (z(ae, ad))
      }
    }
    M = q.slice(0);
    ag = 0;
    ad = 30000;
    for (Z = 0; Z < 8; Z++) {
      J(Z);
      ae = O();
      if (ae < ad) {
        ad = ae;
        ag = Z
      }
      if (ag === 7) {
        break;
      }
      q = M.slice(0);
    }
    if (ag !== Z) {
      J(ag);
    }
    ad = N[ag + ((k - 1) << 3)];
    for (Z = 0; Z < 8; Z++, ad >>= 1) {
      if (ad & 1) {
        q[(a - 1 - Z) + a * 8] = 1;
        if (Z < 6) {
          q[8 + a * Z] = 1;
        } else {
          q[8 + a * (Z + 1)] = 1;
        }
      }
    }
    for (Z = 0; Z < 7; Z++, ad >>= 1) {
      if (ad & 1) {
        q[8 + a * (a - 7 + Z)] = 1;
        if (Z) {
          q[(6 - Z) + a * 8] = 1
        } else {
          q[7 + a * 8] = 1
        }
      }
    }
    return q;
  }
  var S = {
    VERSION: '1.1.4',
    canvas: function(ab) {
      ab = B(ab);
      var ag = ab.size >= 1 && ab.size <= 10
        ? ab.size
        : 4;
      ag *= 25;
      var ad = ab.canvas || w();
      var ae = ad.getContext('2d');
      ae.canvas.width = ag;
      ae.canvas.height = ag;
      ae.fillStyle = ab.background || '#fff';
      ae.fillRect(0, 0, ag, ag);
      k = r[(ab.level && ab.level.toUpperCase()) || 'L'];
      var Y = U(ab.value || '');
      ae.lineWidth = 1;
      var af = ag;
      af /= a;
      af = Math.floor(af);
      var aa = Math.floor((ag - (af * a)) / 2);
      ae.clearRect(0, 0, ag, ag);
      ae.fillStyle = ab.background || '#fff';
      ae.fillRect(0, 0, ag, ag);
      ae.fillStyle = ab.foreground || '#000';
      var ac,
        Z;
      for (ac = 0; ac < a; ac++) {
        for (Z = 0; Z < a; Z++) {
          if (Y[Z * a + ac]) {
            ae.fillRect(af * ac + aa, af * Z + aa, af, af);
          }
        }
      }
      return ad
    },
    image: function(Z) {
      Z = B(Z);
      var aa = this.canvas(Z);
      var Y = Z.image || L();
      Y.src = aa.toDataURL(Z.mime || y);
      Y.height = aa.height;
      Y.width = aa.width;
      return Y
    },
    save: function(aa, ab, ad) {
      aa = B(aa);
      switch (typeof ab) {
        case 'function':
          ad = ab;
          ab = null;
          break;
        case 'string':
          aa.path = ab;
          break
      }
      if (typeof ad !== 'function') {
        throw new TypeError('Invalid callback type: ' + typeof ad);
      }
      var Z = false;
      var ac = this.canvas(aa);
      function Y(ae) {
        if (!Z) {
          Z = true;
          ad(ae);
        }
      }
      if (H) {
        v(ac, aa, Y)
      } else {
        l(ac, aa, Y);
      }
    },
    saveSync: function(Y, Z) {
      Y = B(Y);
      if (typeof Z === 'string') {
        Y.path = Z
      }
      var aa = this.canvas(Y);
      if (H) {
        K(aa, Y)
      } else {
        l(aa, Y)
      }
    },
    toDataURL: function(Y) {
      Y = B(Y);
      return this.canvas(Y).toDataURL(Y.mime || y);
    },
    noConflict: function() {
      C.qr = Q;
      return this
    }
  };
  if (typeof exports !== 'undefined') {
    H = true;
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = S;
    }
    exports.qr = S;
    I = require('canvas');
    P = I.Image;
    D = require('fs')
  } else {
    if (typeof define === 'function' && define.amd) {
      define(function() {
        return S;
      });
    } else {
      if (!C.HTMLCanvasElement) {
        j(S);
      }
      C.qr = S;
    }
  }
  window.qr = S
})(window)
